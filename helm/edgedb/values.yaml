name: edgedb
serviceType: managed

replicaCount: 1

image:
  registry: gsoci.azurecr.io
  name: giantswarm/edgedb
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

edgedb:
  args:
    - "--enable-backend-adaptive-ha"
  backend:
    secretName: edgedb-postgres-superuser
  container:
    port: 5656
  security:
    tls:
      enabled: true
      issuerName: selfsigned-giantswarm
      secretName: edgedb-tls
    serverPassword:
      secretName: edgedb-server-password

postgres:
  cnpg:
    enabled: true
    instances: 2
    storage:
      size: 1Gi
    monitoring:
      podMonitor:
        enabled: true
        labels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

monitoring:
  serviceMonitor:
    enabled: true

podAnnotations: {}

podSecurityContext:
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 5656

networkPolicy:
  enabled: true

resources:
  limits:
    cpu: 250m
    memory: 1024Mi
  requests:
    cpu: 250m
    memory: 1024Mi

# Use either HPA or VPA, but not both.
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Use either HPA or VPA, but not both.
vpa:
  enabled: true
  containerPolicies:
    minAllowed:
      cpu: "250m"
      memory: "1024Mi"  # edgedb has a 1GB minimum.

nodeSelector: {}

tolerations: []

affinity: {}
